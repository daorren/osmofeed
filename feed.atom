<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://daorren.github.io/osmofeed/index.html</id>
    <title>osmos::feed</title>
    <updated>2023-10-14T01:07:58.866Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="https://daorren.github.io/osmofeed/index.html"/>
    <link rel="self" href="https://daorren.github.io/osmofeed/feed.atom"/>
    <entry>
        <title type="html"><![CDATA[Weekend Reading â€” Great to be back!]]></title>
        <id>6450398c51ea0e27518eb0e0</id>
        <link href="https://labnotes.org/weekend-reading-6/"/>
        <updated>2023-10-09T01:37:00.000Z</updated>
        <summary type="html"><![CDATA[Foxes in Love

It's great to be back!
I'm still going through recovery, but got far enough that I'm back to reading good content, and collecting it into a weekly newsletter. So Weekend Reading is back. Hope you enjoy this week's edition.]]></summary>
        <author>
            <name>Assaf Arkin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Builder Censorship:  ethereum's rotten core]]></title>
        <id>https://mteam88.github.io/posts/builder-censorship--ethereums-rotten-core/</id>
        <link href="https://mteam88.github.io/posts/builder-censorship--ethereums-rotten-core/"/>
        <updated>2023-09-29T20:52:10.000Z</updated>
        <summary type="html"><![CDATA[The problem of builder censorship in Ethereum and how to solve it with inclusion lists.]]></summary>
        <author>
            <name>mteam's Writings</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Analyzing Ethereum with Cryo]]></title>
        <id>https://mteam88.github.io/posts/analyzing-ethereum-with-cryo/</id>
        <link href="https://mteam88.github.io/posts/analyzing-ethereum-with-cryo/"/>
        <updated>2023-09-23T22:05:47.000Z</updated>
        <summary type="html"><![CDATA[In this article, I install Cryo, download some Ethereum data, and analyze it with graphs and charts.]]></summary>
        <author>
            <name>mteam's Writings</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to escape CSS selectors in JavaScript (#tilPost)]]></title>
        <id>https://www.stefanjudis.com/today-i-learned/how-to-escape-css-selectors-in-javascript/</id>
        <link href="https://www.stefanjudis.com/today-i-learned/how-to-escape-css-selectors-in-javascript/"/>
        <updated>2023-09-21T22:00:00.000Z</updated>
        <summary type="html"><![CDATA[Here's a trick question: how would you select the following HTML element in JavaScript?
<div id="#">Select me!</div>

Oddly, this element's id is a #. But as far as I can tell, even though it's uncommon it's still a perfectly valid HTML attribute. So, how would you query this element?
You surely could use the good old document.getElementById()...
console.log(document.getElementById('#')); // <div id="#">...

This works, but I rarely use getElementById because it limits me to select elements via an id. Duh! ðŸ˜…
document.querySelector, on the other hand, is more flexible and allows any DOM element to be queried with a CSS selector.
But can you select this "hash id element" with a CSS selector using querySelector? Turns out you can't.
console.log(document.querySelector('##'));
// SyntaxError: â€¦]]></summary>
        <author>
            <name>Stefan Judis Web Development</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Don't read everything you believe]]></title>
        <id>https://mteam88.github.io/posts/dont-read-everything-you-believe/</id>
        <link href="https://mteam88.github.io/posts/dont-read-everything-you-believe/"/>
        <updated>2023-09-16T21:39:33.000Z</updated>
        <summary type="html"><![CDATA[Polarization, tribalism, and the echo chamber.]]></summary>
        <author>
            <name>mteam's Writings</name>
        </author>
    </entry>
</feed>