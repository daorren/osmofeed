<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://daorren.github.io/osmofeed/index.html</id>
    <title>osmos::feed</title>
    <updated>2023-12-25T01:13:45.617Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="https://daorren.github.io/osmofeed/index.html"/>
    <link rel="self" href="https://daorren.github.io/osmofeed/feed.atom"/>
    <entry>
        <title type="html"><![CDATA[Anyone Selling an MEV bot is a Scammer]]></title>
        <id>https://mteam88.github.io/posts/anyone-selling-an-mev-bot-is-a-scammer/</id>
        <link href="https://mteam88.github.io/posts/anyone-selling-an-mev-bot-is-a-scammer/"/>
        <updated>2023-12-24T03:38:41.000Z</updated>
        <summary type="html"><![CDATA[Don't fall for scams. MEV bots are not for sale.]]></summary>
        <author>
            <name>mteam's Writings</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Weekend Reading — Trick AI bot into selling Tahoe for $1]]></title>
        <id>657de1ac43f4111d84b5f497</id>
        <link href="https://labnotes.org/weekend-reading-trick-ai-bot-into-selling-tahoe-for-1/"/>
        <updated>2023-12-23T18:38:50.000Z</updated>
        <summary type="html"><![CDATA[This week we discuss whether HTML is necessary, get a new calendaring app, cover some productivity hacks, balk at AI Gone Wrong, and advise you how to wrap your x-max presents.]]></summary>
        <author>
            <name>Assaf Arkin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Local link targets must be focusable to prevent accessibility issues (#tilPost)]]></title>
        <id>https://www.stefanjudis.com/today-i-learned/relative-html-links-focus-issues/</id>
        <link href="https://www.stefanjudis.com/today-i-learned/relative-html-links-focus-issues/"/>
        <updated>2023-12-22T23:00:00.000Z</updated>
        <summary type="html"><![CDATA[You might think that when you bet on the web platform and rely on native HTML features, your website will be completely accessible. Unfortunately, this assumption is wrong in many cases.
If you want to learn about more inaccessible HTML features, a recent HTMHell article covered many of them. It's a great read!
This week, I've learned that even simple things, such as linking to local elements via id (<a href="#something">), require careful consideration not to cause accessibility problems.
What's the issue with local links?
document.activeElement is only set to focusable elements

I've been reading How To Avoid Breaking Web Pages For Keyboard Users and learned that some assistive technologies rely on document.activeElement.
The activeElement read-only property of the Document interface ret…]]></summary>
        <author>
            <name>Stefan Judis Web Development</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Weekend Reading — 🫛 War and peas]]></title>
        <id>6574f87a43f4111d84b5e979</id>
        <link href="https://labnotes.org/weekend-reading-war-and-peas/"/>
        <updated>2023-12-16T17:40:57.000Z</updated>
        <summary type="html"><![CDATA[This week we solve an SQL murder mystery, watch the mother of all demos, explore the creative playground, cry over some dead startups, list a couple of new cool AI tools, and praise our Neanderthal genes.]]></summary>
        <author>
            <name>Assaf Arkin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web Weekly #117 (#blogPost)]]></title>
        <id>https://www.stefanjudis.com/blog/web-weekly-117/</id>
        <link href="https://www.stefanjudis.com/blog/web-weekly-117/"/>
        <updated>2023-12-10T23:00:00.000Z</updated>
        <summary type="html"><![CDATA[Hello, hello friends! 👋

How can you quickly find out if a web feature is safe to use? Does the definition of the sizes attribute really have to be so painful? And now that we're close to wrapping up 2023, what new features should you start learning?
This week's Web Weekly includes all the answers and much more. Enjoy!
Let's kick off this Web Weekly with some short'n'sweet HTML form trivia!
I was reading the excellent HTMHell advents calendar and discovered a nifty fun fact.
Did you know that a button can submit a form even though it's not included in one?
Put a button somewhere on the page, and reference the form to submit by id — done! The form attribute can be invaluable when your design requires submitting a form on the other side of the page. 😅
But today's trivia doesn't stop here!
…]]></summary>
        <author>
            <name>Stefan Judis Web Development</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Weekend Reading — Current mood]]></title>
        <id>656bbbf343f4111d84b5de34</id>
        <link href="https://labnotes.org/weekend-reading-current-mood/"/>
        <updated>2023-12-09T23:28:33.000Z</updated>
        <summary type="html"><![CDATA[This week we cover HTML bad practices, an NFT that actually makes any sense, alternatives to the dying Evernote, some good design practices, anxiety, digital thermometers, and let’s all be frank about our current mood.]]></summary>
        <author>
            <name>Assaf Arkin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS only "scroll-to-top" (#snippet)]]></title>
        <id>https://www.stefanjudis.com/snippets/css-only-scroll-to-top/</id>
        <link href="https://www.stefanjudis.com/snippets/css-only-scroll-to-top/"/>
        <updated>2023-12-07T23:00:00.000Z</updated>
        <summary type="html"><![CDATA[David Darnes shared a nifty tiny trick to build a "scroll to top" component that automatically shows up after you scroll down a little.
And thanks to modern CSS, position: sticky is all you need. 💙
Here's a scroll-top link in action. 👇
[Interactive component: visit the article to see it...]
But why use 100vh instead of 100%?
Fun fact: percentages in margin-top refer to the logical width of the containing block. margin-top: 50% isn't half the container's height, but width.
Either way, this is a nifty little CSS trick. Thank David!


          
          
            Reply to Stefan]]></summary>
        <author>
            <name>Stefan Judis Web Development</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web Weekly #116 (#blogPost)]]></title>
        <id>https://www.stefanjudis.com/blog/web-weekly-116/</id>
        <link href="https://www.stefanjudis.com/blog/web-weekly-116/"/>
        <updated>2023-12-03T23:00:00.000Z</updated>
        <summary type="html"><![CDATA[Hello, hello Friends! 👋

How does reactivity work in JS frameworks? What's the deal with the oklch() CSS color function? And how can you ship responsive videos on the web?
This week's Web Weekly includes all the answers and much more. Enjoy!
GitHub rolled out new markdown rendering features to give authors more styling options. And they continue to mess with extend the markdown syntax.
You can now render a custom headline, icon and some color if you use a blockquote with the > [!NOTE] syntax. Fancy!
In total, there are !NOTE, !TIP, !IMPORTANT, !WARNING and !CAUTION.
And that's all cool, but I'm just no fan of these custom markdown solutions. It's all fine for GitHub, sure, but GitHub markdown doesn't stay on GitHub. npm is only one example; does npm support this rendering syntax? (I don't…]]></summary>
        <author>
            <name>Stefan Judis Web Development</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A web component to make your text sparkle (#blogPost)]]></title>
        <id>https://www.stefanjudis.com/blog/a-web-component-to-make-your-text-sparkle/</id>
        <link href="https://www.stefanjudis.com/blog/a-web-component-to-make-your-text-sparkle/"/>
        <updated>2023-12-03T23:00:00.000Z</updated>
        <summary type="html"><![CDATA[Inspired by Zach Leatherman and the community's recent rediscovery of HTML web components, I sat down to write a quick component to make text sparkle. There can't be enough sparkles (and confetti), right?
Here are some examples of what <sparkly-text /> can do. 👇
Here's a  sparkly-text  in a headline

And here's a paragraph with bigger sparkles .

And here are some colorful sparkles .

If you want to play around with it find the source code on GitHub.


          
          
            Reply to Stefan]]></summary>
        <author>
            <name>Stefan Judis Web Development</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Weekend Reading — US politics in a nutshell]]></title>
        <id>65627be343f4111d84b5d4be</id>
        <link href="https://labnotes.org/weekend-reading-us-politics-in-a-nutshell/"/>
        <updated>2023-12-02T23:19:14.000Z</updated>
        <summary type="html"><![CDATA[This week we revisit the PDP-11, learn some CSS, pick some cool apps, take note of AI and ad blockers, and square some politics.]]></summary>
        <author>
            <name>Assaf Arkin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Default Apps 2023]]></title>
        <id>65638ddb43f4111d84b5d711</id>
        <link href="https://labnotes.org/default-apps-2023/"/>
        <updated>2023-11-26T18:29:55.000Z</updated>
        <summary type="html"><![CDATA[(Inspired by Chris Coyier)

📨 Mail Client: Shortwave and Spark
📮 Mail Server: Google
📝 Notes: Notes and Notion
✅ To-Do: Things
📆 Calendar: Fantastical through Google Calendar
📁 Cloud File Storage: iCloud Drive
📖 RSS: Reeder through Feedly]]></summary>
        <author>
            <name>Assaf Arkin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[oklch() retains perceived lightness for different hue angles (#tilPost)]]></title>
        <id>https://www.stefanjudis.com/today-i-learned/oklch-perceived-lightness/</id>
        <link href="https://www.stefanjudis.com/today-i-learned/oklch-perceived-lightness/"/>
        <updated>2023-11-25T23:00:00.000Z</updated>
        <summary type="html"><![CDATA[As far as I see, it's time to ditch hsl() and use oklch() for color palettes and design systems. Why's that?
For me, it boils down to two reasons.
New devices and monitors can display colors that aren't defined in the sRGB color space used by rgb(), hsl() or hex colors. Isn't it sad that you can't express these vibrant colors in CSS using existing color methods?
It is. And the solution are new CSS color functions that can talk new and fancy monitor tech (namely wide-gamut P3 colors). It's party time y'all — the web gets a color update with fresh and vibrant colors.
There's oklch(), oklab() and also color() to target the wider color space, but let's focus on oklch() because it's the most user-friendly.
oklch()'s parameters (lightness, chroma and hue) are easy to grasp and feel very similar …]]></summary>
        <author>
            <name>Stefan Judis Web Development</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Weekend Reading — Darth driver]]></title>
        <id>655951f743f4111d84b5cb43</id>
        <link href="https://labnotes.org/weekend-reading-darth-driver/"/>
        <updated>2023-11-25T22:55:01.000Z</updated>
        <summary type="html"><![CDATA[This week we realize we need this truck, map the entire internet form Nov 1969, don’t obsessed over not getting hired, learn more about our brain and guts, and purchase the “never obsolete” PC.]]></summary>
        <author>
            <name>Assaf Arkin</name>
        </author>
    </entry>
</feed>