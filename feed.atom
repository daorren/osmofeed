<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://daorren.github.io/osmofeed/index.html</id>
    <title>osmos::feed</title>
    <updated>2023-10-24T01:09:41.119Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="https://daorren.github.io/osmofeed/index.html"/>
    <link rel="self" href="https://daorren.github.io/osmofeed/feed.atom"/>
    <entry>
        <title type="html"><![CDATA[Weekend Reading â€” Sketching a wardrobe]]></title>
        <id>652c6dba6dcc20561bc73a09</id>
        <link href="https://labnotes.org/weekend-reading-sketching-a-wardrobe/"/>
        <updated>2023-10-21T19:03:26.000Z</updated>
        <summary type="html"><![CDATA[This week we look at an open-source read-it-later app, how the world is designed against the elderly, the placebo effect, being a fast moving company, buying a place, and sketching a wardrobe.]]></summary>
        <author>
            <name>Assaf Arkin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Weekend Reading â€” One minor bug]]></title>
        <id>652c25f0b6d6210beb242b2f</id>
        <link href="https://labnotes.org/weekend-reading-7/"/>
        <updated>2023-10-15T22:54:26.000Z</updated>
        <summary type="html"><![CDATA[This week we have some more comics, talk about software development bugs, pretend to be Columbo, obsess over creativity, find Star Trek on a map of the universe, and yes, I just had a cup of coffee â€¦]]></summary>
        <author>
            <name>Assaf Arkin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web Weekly #112 (#blogPost)]]></title>
        <id>https://www.stefanjudis.com/blog/web-weekly-112/</id>
        <link href="https://www.stefanjudis.com/blog/web-weekly-112/"/>
        <updated>2023-10-14T22:00:00.000Z</updated>
        <summary type="html"><![CDATA[It's been a while, friends! ðŸ‘‹

You might have noticed that the last Web Weekly hit your inbox 35 days ago. It's the longest break since I started Web Weekly, and I can't say that this doesn't bug me, but I needed the break. Life was super busy; I moved, traveled countries to speak at a conference, and then got sick for a few days. It's been a ride...
But it's all good, and I'm back! Thank you to all the people who checked in with me. ðŸ’™
Let's get back to business!
Should HTML allow us to ship responsive videos? How can you optimize your fetch calls? And is there an easy way to escape CSS classes in JavaScript?
This week's Web Weekly includes all the answers and much more. Enjoy!
People were raving about barrel files this week. What's a barrel file? Here's one.
The idea behind barrel filesâ€¦]]></summary>
        <author>
            <name>Stefan Judis Web Development</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to style element descendants with Tailwind CSS (#tilPost)]]></title>
        <id>https://www.stefanjudis.com/today-i-learned/how-to-style-element-descendants-with-tailwind-css/</id>
        <link href="https://www.stefanjudis.com/today-i-learned/how-to-style-element-descendants-with-tailwind-css/"/>
        <updated>2023-10-13T22:00:00.000Z</updated>
        <summary type="html"><![CDATA[I'm maintaining a project built with Tailwind at work. I'm no daily Tailwinder, but usually, I manage just fine. But recently, a trivial task took me quite some time to get right. I wanted to rotate an SVG icon depending on the details element's :open state.
Getting started with Tailwind is straightforward (a CSS property just maps to a class name, right?), but I still have to wrap my head around advanced features like class-based element relationships.
How would you achieve the following CSS in Tailwind?
details:open svg {
  rotate: 0.5turn;
}

Option 1 â€” don't use Tailwind and go vanilla CSS

When googling around, you'll find the advice to "just use" CSS and import a CSS file somewhere. Sure, this works, but what's the point of this? Tailwind promises to solve the CSS maintenance problemâ€¦]]></summary>
        <author>
            <name>Stefan Judis Web Development</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to style element descendents with Tailwind CSS (#tilPost)]]></title>
        <id>https://www.stefanjudis.com/today-i-learned/how-to-style-element-descendents-with-tailwind-css/</id>
        <link href="https://www.stefanjudis.com/today-i-learned/how-to-style-element-descendents-with-tailwind-css/"/>
        <updated>2023-10-13T22:00:00.000Z</updated>
        <summary type="html"><![CDATA[I'm maintaining a project built with Tailwind at work. I'm no daily Tailwinder, but usually, I manage just fine. But recently, a trivial task took me quite some time to get right. I wanted to rotate an SVG icon depending on the details element's :open state.
Getting started with Tailwind is straightforward (a CSS property just maps to a class name, right?), but I still have to wrap my head around advanced features like class-based element relationships.
How would you achieve the following CSS in Tailwind?
details:open svg {
  rotate: 0.5turn;
}

Option 1 â€” don't use Tailwind and go vanilla CSS

When googling around, you'll find the advice to "just use" CSS and import a CSS file somewhere. Sure, this works, but what's the point of this? Tailwind promises to solve the CSS maintenance problemâ€¦]]></summary>
        <author>
            <name>Stefan Judis Web Development</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Weekend Reading â€” Great to be back!]]></title>
        <id>6450398c51ea0e27518eb0e0</id>
        <link href="https://labnotes.org/weekend-reading-6/"/>
        <updated>2023-10-09T01:37:00.000Z</updated>
        <summary type="html"><![CDATA[Foxes in Love

It's great to be back!
I'm still going through recovery, but got far enough that I'm back to reading good content, and collecting it into a weekly newsletter. So Weekend Reading is back. Hope you enjoy this week's edition.]]></summary>
        <author>
            <name>Assaf Arkin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Builder Censorship:  ethereum's rotten core]]></title>
        <id>https://mteam88.github.io/posts/builder-censorship--ethereums-rotten-core/</id>
        <link href="https://mteam88.github.io/posts/builder-censorship--ethereums-rotten-core/"/>
        <updated>2023-09-29T20:52:10.000Z</updated>
        <summary type="html"><![CDATA[The problem of builder censorship in Ethereum and how to solve it with inclusion lists.]]></summary>
        <author>
            <name>mteam's Writings</name>
        </author>
    </entry>
</feed>